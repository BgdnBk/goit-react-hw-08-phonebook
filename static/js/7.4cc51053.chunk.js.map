{"version":3,"sources":["components/views/RegistrView.js"],"names":["RegistrView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","s","conteiner","onSubmit","autoComplete","type","onChange","label","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"gPAKMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,sBAAKW,UAAWC,IAAEC,UAAlB,UACE,qGACA,uBAAMC,SAAUJ,KAAKL,aAAcU,aAAa,MAAhD,UACE,yCAEE,uBACEZ,MAAOL,EACPA,KAAK,OACLkB,KAAK,OACLC,SAAUP,KAAKT,aACfU,UAAWC,IAAEM,WAGjB,0CAEE,uBACEf,MAAOJ,EACPD,KAAK,QACLkB,KAAK,QACLC,SAAUP,KAAKT,aACfU,UAAWC,IAAEM,WAGjB,6CAEE,uBACEf,MAAOH,EACPF,KAAK,WACLkB,KAAK,WACLC,SAAUP,KAAKT,aACfU,UAAWC,IAAEM,WAGjB,wBAAQF,KAAK,SAAb,oI,GAvDgBG,aA8DpBC,EAAqB,CACzBX,WAAYY,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC3B","file":"static/js/7.4cc51053.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../../redux/auth\";\r\nimport s from \"../AppBar/Phonebook.module.css\";\r\n\r\nclass RegistrView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    return (\r\n      <div className={s.conteiner}>\r\n        <h1> Регистрация</h1>\r\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n          <label>\r\n            name\r\n            <input\r\n              value={name}\r\n              name=\"name\"\r\n              type=\"name\"\r\n              onChange={this.handleChange}\r\n              className={s.label}\r\n            />\r\n          </label>\r\n          <label>\r\n            Email\r\n            <input\r\n              value={email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={this.handleChange}\r\n              className={s.label}\r\n            />\r\n          </label>\r\n          <label>\r\n            Password\r\n            <input\r\n              value={password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n              className={s.label}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrView);\r\n"],"sourceRoot":""}