{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-operation.js","components/Form/Form.js","redux/phonebook/phonebook-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Title/Title.js","components/views/ContactsView.js"],"names":["module","exports","name","number","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","e","addContactError","message","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","console","log","a","fetchContactRequest","get","fetchContactSuccess","fetchContactError","Form","state","InputValues","currentTarget","value","setState","addContact","preventDefault","toast","error","props","onSubmit","resetInputValues","this","fetchContacts","idName","shortid","generate","idNumber","className","s","form","htmlFor","labelName","id","type","onChange","autoComplete","labelNumber","pattern","btnForm","Component","connect","contactList","phonebook","contacts","phonebookOperations","newName","some","checkName","getFilter","filter","getAllContacts","getPhonebookFilter","createSelector","filterValues","toLowerCase","includes","phonebookSelector","onDeleted","TransitionGroup","component","classNames","table","map","CSSTransition","timeout","unmountOnExit","btnList","onClick","searchContact","phonebookAction","target","containerSearch","labelSearch","inputSearch","Title","ContactsView","ContactForm"],"mappings":"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","file":"static/js/4.98ac5a58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__u09uj\",\"labelName\":\"Form_labelName__nfKdx\",\"labelNumber\":\"Form_labelNumber__1bfGJ\",\"btnForm\":\"Form_btnForm__3Has3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSearch\":\"Filter_containerSearch__1QDJY\",\"labelSearch\":\"Filter_labelSearch__1TGQC\",\"inputSearch\":\"Filter_inputSearch__1DmcU\"};","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./phonebook-action\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (e) {\r\n    dispatch(fetchContactError(e.message));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((e) => dispatch(addContactError(e.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((e) => dispatch(deleteContactError(e.message)));\r\n  console.log(contactId);\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"../Form/Form.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operation\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  InputValues = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        this.setState({ name: value });\r\n        break;\r\n      case \"number\":\r\n        this.setState({ number: value });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  addContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checNumer = this.state.number;\r\n\r\n    if (checNumer === \"\") {\r\n      return toast.error(\"Введите номер\");\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    this.resetInputValues();\r\n  };\r\n\r\n  resetInputValues = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const idName = shortid.generate();\r\n    const idNumber = shortid.generate();\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.addContact}>\r\n        <label htmlFor={idName} className={s.labelName}>\r\n          Имя\r\n        </label>\r\n        <input\r\n          id={idName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.InputValues}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <label htmlFor={idNumber} className={s.labelNumber}>\r\n          Номер\r\n        </label>\r\n        <input\r\n          id={idNumber}\r\n          type=\"tel\"\r\n          pattern=\"^[ 0-9]+$\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.InputValues}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <button className={s.btnForm} type=\"submite\">\r\n          Добавить контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst checkName = (contactList, newName) => {\r\n  return contactList?.some(({ name }) => name === newName);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: state.phonebook.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n  onSubmit: (newName, number, contactList) => {\r\n    if (checkName(contactList, newName)) {\r\n      return toast.error(\"Это имя уже существует\");\r\n    }\r\n    dispatch(phonebookOperations.addContact(newName, number));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.phonebook.filter;\r\nconst getAllContacts = (state) => state.phonebook.contacts;\r\n\r\nconst getPhonebookFilter = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterValues = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name?.toLowerCase().includes(filterValues)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getFilter,\r\n  getAllContacts,\r\n  getPhonebookFilter,\r\n};\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { phonebookOperations, phonebookSelector } from \"../../redux/phonebook\";\r\n\r\nfunction СontactForm({ contactList, onDeleted }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" classNames={s.table}>\r\n      {contactList.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={s} unmountOnExit>\r\n            <li>\r\n              {name}: {number}\r\n              <button\r\n                className={s.btnList}\r\n                type=\"button\"\r\n                onClick={() => onDeleted(id)}\r\n              >\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: phonebookSelector.getPhonebookFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleted: (id) => dispatch(phonebookOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(СontactForm);\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as phonebookAction from \"../../redux/phonebook/phonebook-action\";\r\nimport phonebookSelector from \"../../redux/phonebook/phonebook-selector\";\r\n\r\nfunction Filter({ value, searchContact }) {\r\n  const id = shortid.generate();\r\n\r\n  return (\r\n    <div className={s.containerSearch}>\r\n      <h2 className={s.contactList}>Контакты</h2>\r\n      <label className={s.labelSearch} htmlFor={id}>\r\n        Поиск контакта по имени\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={searchContact}\r\n        id={id}\r\n        className={s.inputSearch}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  value: phonebookSelector.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  searchContact: (e) => dispatch(phonebookAction.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nfunction Title() {\r\n  return (\r\n    <div>\r\n      <h1 className={s.form}>Телефонная книга</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\n\r\nimport Form from \"../Form/Form\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Title from \"../Title/Title\";\r\n\r\nfunction ContactsView() {\r\n  return (\r\n    <>\r\n      <Title />\r\n      <Form />\r\n      <Filter />\r\n      <ContactForm />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}